{"ast":null,"code":"import { store } from '../../';\nimport * as ActionEvent from '../../static/actionsEvent';\nimport AuthenticationService from '../../service/AuthenticationService';\nexport var LOGIN_SUCESS = \"LOGIN_SUCESS\";\nexport var LOGIN_FAILED = \"LOGIN_FAILED\";\nexport var setLoginRedirectUrl = function setLoginRedirectUrl(toPath) {\n  return store.dispatch({\n    type: ActionEvent.Login_Redirect_Event,\n    toPath: toPath\n  });\n};\nexport var login = function login(userName, UserPass) {\n  return function (dispatch) {\n    AuthenticationService.executeJwtAuthenticationService(userName, UserPass).then(function (response) {\n      if (response.message === \"login\") {\n        dispatch({\n          type: LOGIN_SUCESS,\n          payload: {\n            loginName: \"login\",\n            isLogin: 1\n          }\n        });\n      } else {\n        dispatch({\n          type: LOGIN_FAILED,\n          payload: {\n            loginName: \"not login\",\n            isLogin: 0\n          }\n        });\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/src/redux/actions/loginActions.js"],"names":["store","ActionEvent","AuthenticationService","LOGIN_SUCESS","LOGIN_FAILED","setLoginRedirectUrl","toPath","dispatch","type","Login_Redirect_Event","login","userName","UserPass","executeJwtAuthenticationService","then","response","message","payload","loginName","isLogin"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,QAApB;AACA,OAAO,KAAKC,WAAZ,MAA6B,2BAA7B;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;AACA,OAAS,IAAMC,YAAY,GAAG,cAArB;AACT,OAAS,IAAMC,YAAY,GAAG,cAArB;AAKT,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,MAAD,EAAY;AAC9C,SAAQN,KAAK,CAACO,QAAN,CAAe;AACnBC,IAAAA,IAAI,EAAEP,WAAW,CAACQ,oBADC;AAEpBH,IAAAA,MAAM,EAAEA;AAFY,GAAf,CAAR;AAIA,CALM;AAQP,OAAO,IAAMI,KAAK,GAAG,SAARA,KAAQ,CAACC,QAAD,EAAUC,QAAV,EAAuB;AACxC,SAAO,UAAAL,QAAQ,EAAI;AACjBL,IAAAA,qBAAqB,CAACW,+BAAtB,CAAsDF,QAAtD,EAA+DC,QAA/D,EACCE,IADD,CACM,UAACC,QAAD,EACH;AACD,UAAIA,QAAQ,CAACC,OAAT,KAAmB,OAAvB,EAA+B;AAC7BT,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEL,YADC;AAEPc,UAAAA,OAAO,EAAE;AAAEC,YAAAA,SAAS,EAAC,OAAZ;AAAoBC,YAAAA,OAAO,EAAC;AAA5B;AAFF,SAAD,CAAR;AAID,OALD,MAMI;AAEFZ,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEJ,YADC;AAEPa,UAAAA,OAAO,EAAE;AAAEC,YAAAA,SAAS,EAAC,WAAZ;AAAwBC,YAAAA,OAAO,EAAC;AAAhC;AAFF,SAAD,CAAR;AAID;AAGF,KAlBD;AAsBD,GAvBD;AAwBD,CAzBI","sourcesContent":["import {store} from '../../';\nimport * as ActionEvent from '../../static/actionsEvent';\nimport AuthenticationService from '../../service/AuthenticationService'\nexport   const LOGIN_SUCESS = \"LOGIN_SUCESS\";\nexport   const LOGIN_FAILED = \"LOGIN_FAILED\";\n\n\n\n\nexport const setLoginRedirectUrl = (toPath) => {\n\treturn  store.dispatch({\n\t\t\t \ttype: ActionEvent.Login_Redirect_Event,\n\t\t\t\ttoPath: toPath\n\t\t\t })\n} \n\n\nexport const login = (userName,UserPass) => {\n    return dispatch => {\n      AuthenticationService.executeJwtAuthenticationService(userName,UserPass)\n      .then((response\n      )=>{\n        if (response.message===\"login\"){\n          dispatch({\n            type: LOGIN_SUCESS,\n            payload: { loginName:\"login\",isLogin:1}\n          });\n        }\n        else{\n  \n          dispatch({\n            type: LOGIN_FAILED,\n            payload: { loginName:\"not login\",isLogin:0}\n          });\n        }\n        \n\n      })\n      \n     \n       \n    };\n  };\n\n"]},"metadata":{},"sourceType":"module"}