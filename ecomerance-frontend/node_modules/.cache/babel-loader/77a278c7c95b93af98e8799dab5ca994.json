{"ast":null,"code":"import _objectWithoutProperties from \"/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/src/components/auth/PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { setLoginRedirectUrl } from '../../redux/actions/loginActions';\nimport { CheckLogin } from '../../service/CheckLogin';\nimport setAuthToken from './setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport AuthenticationService from '../../service/AuthenticationService';\n\nvar AuthorizedRoute = /*#__PURE__*/function (_React$Component) {\n  _inherits(AuthorizedRoute, _React$Component);\n\n  var _super = _createSuper(AuthorizedRoute);\n\n  function AuthorizedRoute() {\n    _classCallCheck(this, AuthorizedRoute);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AuthorizedRoute, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          Component = _this$props.component,\n          rest = _objectWithoutProperties(_this$props, [\"component\"]);\n\n      AuthenticationService.validateToekn().then(function (response) {\n        console.log(isLogged);\n\n        if (isLogged === \"approved\") {\n          setLoginRedirectUrl(_this.props.location.pathname);\n        }\n\n        return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n          render: function render(props) {\n            return isLogged ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 36\n              }\n            })) : /*#__PURE__*/React.createElement(Redirect, {\n              to: \"/login-register\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 35\n              }\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }\n        }));\n      }); //false //sessionStorage.getItem(\"userName\") != null ? true : false;\n    }\n  }]);\n\n  return AuthorizedRoute;\n}(React.Component);\n\nexport default AuthorizedRoute;","map":{"version":3,"sources":["/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/src/components/auth/PrivateRoute.jsx"],"names":["React","Route","Redirect","setLoginRedirectUrl","CheckLogin","setAuthToken","jwt_decode","AuthenticationService","AuthorizedRoute","props","Component","component","rest","validateToekn","then","response","console","log","isLogged","location","pathname"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,SAAQC,UAAR,QAA0B,0BAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;;IACMC,e;;;;;;;;;;;;;6BACO;AAAA;;AAAA,wBACqC,KAAKC,KAD1C;AAAA,UACcC,SADd,eACGC,SADH;AAAA,UAC4BC,IAD5B;;AAELL,MAAAA,qBAAqB,CAACM,aAAtB,GAAsCC,IAAtC,CAA2C,UAACC,QAAD,EAAY;AACnDC,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;;AACA,YAAGA,QAAQ,KAAG,UAAd,EAA0B;AACtBf,UAAAA,mBAAmB,CAAC,KAAI,CAACM,KAAL,CAAWU,QAAX,CAAoBC,QAArB,CAAnB;AACH;;AACD,4BACQ,oBAAC,KAAD,oBAAWR,IAAX;AAAiB,UAAA,MAAM,EAAE,gBAAAH,KAAK,EAAI;AAC9B,mBAAOS,QAAQ,gBACJ,oBAAC,SAAD,oBAAeT,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADI,gBAEL,oBAAC,QAAD;AAAU,cAAA,EAAE,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFV;AAGH,WAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADR;AASH,OAdD,EAFK,CAkBL;AAEH;;;;EArByBT,KAAK,CAACU,S;;AAwBpC,eAAeF,eAAf","sourcesContent":["\nimport React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { setLoginRedirectUrl } from '../../redux/actions/loginActions'\nimport {CheckLogin } from '../../service/CheckLogin'\nimport setAuthToken from './setAuthToken'\nimport jwt_decode from 'jwt-decode'\nimport AuthenticationService from '../../service/AuthenticationService'\nclass AuthorizedRoute extends React.Component {\n    render() {\n        const { component: Component, ...rest } = this.props\n        AuthenticationService.validateToekn().then((response)=>{\n            console.log(isLogged);\n            if(isLogged===\"approved\") {\n                setLoginRedirectUrl(this.props.location.pathname);\n            }\n            return (\n                    <Route {...rest} render={props => {\n                        return isLogged\n                                ?  <Component {...props} />\n                                : <Redirect to=\"/login-register\" />\n                    }} />\n            )\n\n\n        })\n        \n        //false //sessionStorage.getItem(\"userName\") != null ? true : false;\n        \n    }\n}\n \nexport default AuthorizedRoute"]},"metadata":{},"sourceType":"module"}