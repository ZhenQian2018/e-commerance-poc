{"ast":null,"code":"var _jsxFileName = \"/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/src/index.js\";\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { save, load } from \"redux-localstorage-simple\";\nimport { Provider } from \"react-redux\";\nimport { fetchProducts } from \"./redux/actions/productActions\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport products from \"./data/products.json\";\nimport App from \"./App\";\nimport \"./assets/scss/style.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { login } from \"./redux/actions/loginActions\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from 'redux-thunk';\nimport * as actions from './middleware/apiGen';\nvar composeEnhancers = composeWithDevTools({\n  actions: actions,\n  trace: true,\n  traceLimit: 25\n});\nexport var store = createStore(rootReducer(), load(), composeEnhancers(applyMiddleware(thunk, save(), thunkMiddleware))); //export const store2 = createStore(rootReducer(), initState, applyMiddleware(thunk));\n// fetch products from json file\n\nstore.dispatch(fetchProducts(products));\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.register();","map":{"version":3,"sources":["/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/src/index.js"],"names":["React","ReactDOM","createStore","applyMiddleware","thunk","save","load","Provider","fetchProducts","rootReducer","products","App","serviceWorker","login","composeWithDevTools","thunkMiddleware","actions","composeEnhancers","trace","traceLimit","store","dispatch","render","document","getElementById","register"],"mappings":";AAAA,OAAO,yBAAP;AACA,OAAO,2BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,2BAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,0BAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,KAAR,QAAoB,8BAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAO,KAAKC,OAAZ,MAA0B,qBAA1B;AAEA,IAAMC,gBAAgB,GAAGH,mBAAmB,CAAC;AAC3CE,EAAAA,OAAO,EAAPA,OAD2C;AAE3CE,EAAAA,KAAK,EAAE,IAFoC;AAG3CC,EAAAA,UAAU,EAAE;AAH+B,CAAD,CAA5C;AAMA,OAAO,IAAMC,KAAK,GAAGlB,WAAW,CAC9BO,WAAW,EADmB,EAE9BH,IAAI,EAF0B,EAG9BW,gBAAgB,CAACd,eAAe,CAACC,KAAD,EAAQC,IAAI,EAAZ,EAAeU,eAAf,CAAhB,CAHc,CAAzB,C,CAMP;AACA;;AACAK,KAAK,CAACC,QAAN,CAAeb,aAAa,CAACE,QAAD,CAA5B;AAEAT,QAAQ,CAACqB,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAZ,aAAa,CAACa,QAAd","sourcesContent":["import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { save, load } from \"redux-localstorage-simple\";\nimport { Provider } from \"react-redux\";\nimport { fetchProducts } from \"./redux/actions/productActions\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport products from \"./data/products.json\";\nimport App from \"./App\";\nimport \"./assets/scss/style.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {login} from \"./redux/actions/loginActions\"\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from 'redux-thunk'\nimport * as actions  from './middleware/apiGen'\n\nconst composeEnhancers = composeWithDevTools({\n  actions,\n  trace: true,\n  traceLimit: 25,\n})\n\nexport const store = createStore(\n  rootReducer(),\n  load(),\n  composeEnhancers(applyMiddleware(thunk, save(),thunkMiddleware)  ),\n  \n);\n//export const store2 = createStore(rootReducer(), initState, applyMiddleware(thunk));\n// fetch products from json file\nstore.dispatch(fetchProducts(products));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"]},"metadata":{},"sourceType":"module"}