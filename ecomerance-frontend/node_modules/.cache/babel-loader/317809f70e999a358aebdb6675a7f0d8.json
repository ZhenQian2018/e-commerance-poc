{"ast":null,"code":"import _objectSpread from \"/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as actions from '../../middleware/apiGen';\nimport * as ActionEvent from '../../static/actionsEvent';\nvar initState = {\n  userId: \"\",\n  passsword: \"\",\n  toPath: \"home-fashion\",\n  loginStatus: {\n    loginName: \"not login\",\n    isLogin: 0\n  }\n};\n\nvar loginReducer = function loginReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action.type);\n\n  if (action.type === actions.loginSuccess.type) {\n    console.log(state);\n    console.log(action.payload);\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loginStatus: action.payload\n    });\n  } //   else if(action.type= actions.logoutSccess.type){\n  // return{\n  //   ...state,\n  //   loginStatus:action.payload\n  // }\n  //   }\n  else if (action.type === actions.loginFailed.type) {\n      console.log(\"login failed\");\n      state = undefined;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginStatus: action.payload\n      });\n    } else if (action.type === actions.loginBegan.type) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginStatus: actions.loginBegan.payload\n      });\n    } else if (action.type === actions.updatePass.type) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        password: action.payload\n      });\n    } else if (action.type === actions.updateUser.type) {\n      console.log(\"updateUser\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userId: action.payload\n      });\n    } else if (action.type === ActionEvent.Login_Redirect_Event) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        redirectTo: {\n          toPath: action.toPath\n        }\n      });\n    }\n\n  return state;\n};\n\nexport default loginReducer;","map":{"version":3,"sources":["/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/src/redux/reducers/loginReducer.js"],"names":["actions","ActionEvent","initState","userId","passsword","toPath","loginStatus","loginName","isLogin","loginReducer","state","action","console","log","type","loginSuccess","payload","loginFailed","undefined","loginBegan","updatePass","password","updateUser","Login_Redirect_Event","redirectTo"],"mappings":";AACA,OAAO,KAAKA,OAAZ,MAAyB,yBAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,2BAA7B;AACA,IAAMC,SAAS,GAAG;AAEhBC,EAAAA,MAAM,EAAC,EAFS;AAGhBC,EAAAA,SAAS,EAAC,EAHM;AAIhBC,EAAAA,MAAM,EAAC,cAJS;AAKhBC,EAAAA,WAAW,EAAC;AAAEC,IAAAA,SAAS,EAAE,WAAb;AACZC,IAAAA,OAAO,EAAE;AADG;AALI,CAAlB;;AASA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBR,SAAsB;AAAA,MAAXS,MAAW;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;AAEA,MAAIH,MAAM,CAACG,IAAP,KAAgBd,OAAO,CAACe,YAAR,CAAqBD,IAAzC,EAA+C;AAC7CF,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACK,OAAnB;AAGA,2CACKN,KADL;AAEEJ,MAAAA,WAAW,EAAEK,MAAM,CAACK;AAFtB;AAID,GATD,CAUF;AACA;AACA;AACA;AAGA;AAEA;AAlBE,OAmBK,IAAGL,MAAM,CAACG,IAAP,KAAcd,OAAO,CAACiB,WAAR,CAAoBH,IAArC,EAA0C;AAC7CF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAH,MAAAA,KAAK,GAAGQ,SAAR;AACA,6CACKR,KADL;AAEEJ,QAAAA,WAAW,EAACK,MAAM,CAACK;AAFrB;AAMD,KATI,MAUA,IAAGL,MAAM,CAACG,IAAP,KAAcd,OAAO,CAACmB,UAAR,CAAmBL,IAApC,EAAyC;AAC5C,6CACKJ,KADL;AAEEJ,QAAAA,WAAW,EAACN,OAAO,CAACmB,UAAR,CAAmBH;AAFjC;AAID,KALI,MAMA,IAAGL,MAAM,CAACG,IAAP,KAAgBd,OAAO,CAACoB,UAAR,CAAmBN,IAAtC,EAA2C;AAC9C,6CACKJ,KADL;AAEEW,QAAAA,QAAQ,EAACV,MAAM,CAACK;AAFlB;AAOD,KARI,MASA,IAAGL,MAAM,CAACG,IAAP,KAAed,OAAO,CAACsB,UAAR,CAAmBR,IAArC,EAA0C;AAC7CF,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,6CACKH,KADL;AAEEP,QAAAA,MAAM,EAACQ,MAAM,CAACK;AAFhB;AAOD,KATI,MAUA,IAAGL,MAAM,CAACG,IAAP,KAAgBb,WAAW,CAACsB,oBAA/B,EAAoD;AACvD,6CACKb,KADL;AAEEc,QAAAA,UAAU,EAAC;AAACnB,UAAAA,MAAM,EAACM,MAAM,CAACN;AAAf;AAFb;AAKD;;AAED,SAAOK,KAAP;AACD,CAlED;;AAoEA,eAAeD,YAAf","sourcesContent":["\nimport * as actions from '../../middleware/apiGen';\nimport * as ActionEvent from '../../static/actionsEvent';\nconst initState = {\n \n  userId:\"\",\n  passsword:\"\",\n  toPath:\"home-fashion\",\n  loginStatus:{ loginName: \"not login\",\n  isLogin: 0,}\n};\n\nconst loginReducer = (state = initState, action) => {\n  console.log(action.type)\n \n  if (action.type === actions.loginSuccess.type) {\n    console.log(state);\n    console.log(action.payload);\n\n      \n    return {\n      ...state,\n      loginStatus: action.payload\n    };\n  }\n//   else if(action.type= actions.logoutSccess.type){\n// return{\n//   ...state,\n//   loginStatus:action.payload\n\n\n// }\n\n//   }\n  else if(action.type===actions.loginFailed.type){\n    console.log(\"login failed\");\n    state = undefined\n    return{\n      ...state,\n      loginStatus:action.payload\n\n    }\n\n  }\n  else if(action.type===actions.loginBegan.type){\n    return {\n      ...state,\n      loginStatus:actions.loginBegan.payload\n    }\n  }\n  else if(action.type === actions.updatePass.type){\n    return{\n      ...state,\n      password:action.payload\n\n    }\n\n\n  }\n  else if(action.type ===actions.updateUser.type){\n    console.log(\"updateUser\");\n    return{\n      ...state,\n      userId:action.payload\n\n    }\n\n\n  }\n  else if(action.type === ActionEvent.Login_Redirect_Event){\n    return{\n      ...state,\n      redirectTo:{toPath:action.toPath}\n\n    }\n  }\n\n  return state;\n};\n\nexport default loginReducer;\n"]},"metadata":{},"sourceType":"module"}