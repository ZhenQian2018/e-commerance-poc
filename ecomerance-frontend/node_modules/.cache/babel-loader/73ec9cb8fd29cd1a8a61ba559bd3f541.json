{"ast":null,"code":"import _objectSpread from \"/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { updateUser, updatePass, loginSuccess, loginFailed, loginBegan, logoutBegan, logoutSccess, logoutFailed } from '../../middleware/apiGen';\nimport * as actions from '../../middleware/apiGen';\nimport * as ActionEvent from '../../static/actionsEvent';\nimport { createReducer } from '@reduxjs/toolkit';\nvar initState = {\n  username: \"\",\n  passsword: \"\",\n  toPath: \"home-fashion\",\n  loginStatus: {\n    loginName: \"not login\",\n    isLogin: 0\n  }\n};\nvar loginReducer = createReducer(initState, {\n  updateUser: function updateUser(state, action) {\n    console.log(\"updatinguser\");\n    state.push({\n      username: action.payload\n    });\n  },\n  loginBegan: function loginBegan(state, action) {\n    state.push({\n      loginStatus: {\n        message: \"loginBegan\",\n        isLogin: 0,\n        loginName: \"login\"\n      }\n    });\n  }\n});\n\nvar loginReducer2 = function loginReducer2() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action.type);\n\n  if (action.type === actions.loginSuccess.type) {\n    console.log(state);\n    console.log(action.payload);\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loginStatus: action.payload\n    });\n  } //   else if(action.type= actions.logoutSccess.type){\n  // return{\n  //   ...state,\n  //   loginStatus:action.payload\n  // }\n  //   }\n  else if (action.type === actions.loginFailed.type) {\n      console.log(\"login failed\");\n      state = undefined;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginStatus: action.payload\n      });\n    } else if (action.type === actions.loginBegan.type) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginStatus: actions.loginBegan.payload\n      });\n    } else if (action.type === actions.updatePass.type) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        password: action.payload\n      });\n    } else if (action.type === actions.updateUser.type) {\n      console.log(\"updateUser\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userId: action.payload\n      });\n    } else if (action.type === ActionEvent.Login_Redirect_Event) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        redirectTo: {\n          toPath: action.toPath\n        }\n      });\n    }\n\n  return state;\n};\n\nexport default loginReducer;","map":{"version":3,"sources":["/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/src/redux/reducers/loginReducer.js"],"names":["updateUser","updatePass","loginSuccess","loginFailed","loginBegan","logoutBegan","logoutSccess","logoutFailed","actions","ActionEvent","createReducer","initState","username","passsword","toPath","loginStatus","loginName","isLogin","loginReducer","state","action","console","log","push","payload","message","loginReducer2","type","undefined","password","userId","Login_Redirect_Event","redirectTo"],"mappings":"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","sourcesContent":["\nimport {updateUser,updatePass,loginSuccess,loginFailed,loginBegan,logoutBegan,logoutSccess,logoutFailed}from '../../middleware/apiGen';\nimport * as actions from'../../middleware/apiGen'\nimport * as ActionEvent from '../../static/actionsEvent';\nimport {createReducer} from'@reduxjs/toolkit'\nconst initState = {\n \n  username:\"\",\n  passsword:\"\",\n  toPath:\"home-fashion\",\n  loginStatus:{ loginName: \"not login\",\n  isLogin: 0,}\n};\n const loginReducer = createReducer(initState,{\n\n  updateUser:(state,action)=>{\n    console.log(\"updatinguser\")\n    state.push({username:action.payload})\n\n  },\n  loginBegan:(state,action)=>{\n    \n    state.push({\n      loginStatus:{\nmessage:\"loginBegan\",\nisLogin:0,\nloginName:\"login\"\n\n      }\n\n    })\n\n  }\n  \n\n\n})\n\n\nconst loginReducer2 = (state = initState, action) => {\n  console.log(action.type)\n \n  if (action.type === actions.loginSuccess.type) {\n    console.log(state);\n    console.log(action.payload);\n\n      \n    return {\n      ...state,\n      loginStatus: action.payload\n    };\n  }\n//   else if(action.type= actions.logoutSccess.type){\n// return{\n//   ...state,\n//   loginStatus:action.payload\n\n\n// }\n\n//   }\n  else if(action.type===actions.loginFailed.type){\n    console.log(\"login failed\");\n    state = undefined\n    return{\n      ...state,\n      loginStatus:action.payload\n\n    }\n\n  }\n  else if(action.type===actions.loginBegan.type){\n    return {\n      ...state,\n      loginStatus:actions.loginBegan.payload\n    }\n  }\n  else if(action.type === actions.updatePass.type){\n    return{\n      ...state,\n      password:action.payload\n\n    }\n\n\n  }\n  else if(action.type ===actions.updateUser.type){\n    console.log(\"updateUser\");\n    return{\n      ...state,\n      userId:action.payload\n\n    }\n\n\n  }\n  else if(action.type === ActionEvent.Login_Redirect_Event){\n    return{\n      ...state,\n      redirectTo:{toPath:action.toPath}\n\n    }\n  }\n\n  return state;\n};\n\nexport default loginReducer;\n"]},"metadata":{},"sourceType":"module"}