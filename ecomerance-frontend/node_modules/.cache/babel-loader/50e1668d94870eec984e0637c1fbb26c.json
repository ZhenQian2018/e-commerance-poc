{"ast":null,"code":"import _objectSpread from \"/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { LOGIN_SUCESS, login, LOGIN_FAILED, UpdatePassword, UpdateUserId } from \"../actions/loginActions\";\nvar initState = {\n  loginName: \"not login\",\n  isLogin: 0,\n  curUserId: \"\",\n  curPassword: \"\"\n};\n\nvar loginReducer = function loginReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === LOGIN_SUCESS) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loginStatus: action.payload\n    });\n  } else if (action.type === LOGIN_FAILED) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loginStatus: action.payload\n    });\n  } else if (action.type === UpdatePassword) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loginStatus: action.payload\n    });\n  } else if (action.type === UpdateUserId) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loginStatus: action.payload\n    });\n  }\n\n  return state;\n};\n\nexport default loginReducer;","map":{"version":3,"sources":["/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/src/redux/reducers/loginReducer.js"],"names":["LOGIN_SUCESS","login","LOGIN_FAILED","UpdatePassword","UpdateUserId","initState","loginName","isLogin","curUserId","curPassword","loginReducer","state","action","type","loginStatus","payload"],"mappings":";AACA,SAAQA,YAAR,EAAqBC,KAArB,EAA2BC,YAA3B,EAAwCC,cAAxC,EAAuDC,YAAvD,QAA0E,yBAA1E;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,WADK;AAEhBC,EAAAA,OAAO,EAAE,CAFO;AAGhBC,EAAAA,SAAS,EAAC,EAHM;AAIhBC,EAAAA,WAAW,EAAC;AAJI,CAAlB;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBN,SAAsB;AAAA,MAAXO,MAAW;;AAClD,MAAIA,MAAM,CAACC,IAAP,KAAgBb,YAApB,EAAkC;AAChC,2CACKW,KADL;AAEEG,MAAAA,WAAW,EAAEF,MAAM,CAACG;AAFtB;AAID,GALD,MAMK,IAAGH,MAAM,CAACC,IAAP,KAAcX,YAAjB,EAA8B;AACjC,2CACKS,KADL;AAEEG,MAAAA,WAAW,EAACF,MAAM,CAACG;AAFrB;AAMD,GAPI,MAQA,IAAGH,MAAM,CAACC,IAAP,KAAeV,cAAlB,EAAiC;AACpC,2CACKQ,KADL;AAEEG,MAAAA,WAAW,EAACF,MAAM,CAACG;AAFrB;AAOD,GARI,MASA,IAAGH,MAAM,CAACC,IAAP,KAAeT,YAAlB,EAA+B;AAClC,2CACKO,KADL;AAEEG,MAAAA,WAAW,EAACF,MAAM,CAACG;AAFrB;AAOD;;AAED,SAAOJ,KAAP;AACD,CAnCD;;AAqCA,eAAeD,YAAf","sourcesContent":["\nimport {LOGIN_SUCESS,login,LOGIN_FAILED,UpdatePassword,UpdateUserId} from \"../actions/loginActions\"\n\nconst initState = {\n  loginName: \"not login\",\n  isLogin: 0,\n  curUserId:\"\",\n  curPassword:\"\"\n};\n\nconst loginReducer = (state = initState, action) => {\n  if (action.type === LOGIN_SUCESS) {\n    return {\n      ...state,\n      loginStatus: action.payload\n    };\n  }\n  else if(action.type===LOGIN_FAILED){\n    return{\n      ...state,\n      loginStatus:action.payload\n\n    }\n\n  }\n  else if(action.type ===UpdatePassword){\n    return{\n      ...state,\n      loginStatus:action.payload\n\n    }\n\n\n  }\n  else if(action.type ===UpdateUserId){\n    return{\n      ...state,\n      loginStatus:action.payload\n\n    }\n\n\n  }\n\n  return state;\n};\n\nexport default loginReducer;\n"]},"metadata":{},"sourceType":"module"}