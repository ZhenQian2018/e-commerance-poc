{"ast":null,"code":"import _objectSpread from \"/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { updateUser, updatePass, loginSuccess, loginFailed, loginBegan, logoutBegan, logoutSccess, logoutFailed } from '../../middleware/apiGen';\nimport * as actions from '../../middleware/apiGen';\nimport * as ActionEvent from '../../static/actionsEvent';\nimport { createReducer } from '@reduxjs/toolkit';\nvar initState = {\n  username: \"\",\n  password: \"\",\n  toPath: \"home-fashion\",\n  loginStatus: {\n    loginName: \"not login\",\n    isLogin: 0\n  }\n}; //  const loginReducer = createReducer(initState,{\n//   updateUser:(state,action)=>{\n//     console.log(\"updatinguser\")\n//     state.push({username:action.payload})\n//   },\n//   loginBegan:(state,action)=>{\n//     state.push({\n//       loginStatus:{\n// message:\"loginBegan\",\n// isLogin:0,\n// loginName:\"login\"\n//       }\n//     })\n//   }\n// })\n\nvar loginReducer = function loginReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action.type);\n\n  if (action.type === actions.loginSuccess.type) {\n    console.log(state);\n    console.log(action.payload);\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loginStatus: action.payload\n    });\n  } //   else if(action.type= actions.signout.type){\n  //     console.log(\"logout brgan\");\n  //     console.log(action);\n  // return{\n  //   ...state,\n  //   loginStatus:action.payload\n  // }\n  //   }\n  else if (action.type === actions.loginFailed.type) {\n      console.log(\"login failed\");\n      console.log(\"action.payload\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginStatus: action.payload\n      });\n    } else if (action.type === actions.loginBegan.type) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginStatus: actions.loginBegan.payload\n      });\n    } else if (action.type === actions.updatePass.type) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        password: action.payload\n      });\n    } else if (action.type === actions.updateUser.type) {\n      console.log(\"updateUser\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        username: action.payload\n      });\n    } else if (action.type === ActionEvent.Login_Redirect_Event) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        redirectTo: {\n          toPath: action.toPath\n        }\n      });\n    }\n\n  return state;\n};\n\nexport default loginReducer;","map":{"version":3,"sources":["/Users/zhen/Documents/marlabs/E-Commerce-sample/flone/src/redux/reducers/loginReducer.js"],"names":["updateUser","updatePass","loginSuccess","loginFailed","loginBegan","logoutBegan","logoutSccess","logoutFailed","actions","ActionEvent","createReducer","initState","username","password","toPath","loginStatus","loginName","isLogin","loginReducer","state","action","console","log","type","payload","Login_Redirect_Event","redirectTo"],"mappings":";AACA,SAAQA,UAAR,EAAmBC,UAAnB,EAA8BC,YAA9B,EAA2CC,WAA3C,EAAuDC,UAAvD,EAAkEC,WAAlE,EAA8EC,YAA9E,EAA2FC,YAA3F,QAA6G,yBAA7G;AACA,OAAO,KAAKC,OAAZ,MAAwB,yBAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,2BAA7B;AACA,SAAQC,aAAR,QAA2B,kBAA3B;AACA,IAAMC,SAAS,GAAG;AAEhBC,EAAAA,QAAQ,EAAC,EAFO;AAGhBC,EAAAA,QAAQ,EAAC,EAHO;AAIhBC,EAAAA,MAAM,EAAC,cAJS;AAKhBC,EAAAA,WAAW,EAAC;AAAEC,IAAAA,SAAS,EAAE,WAAb;AACZC,IAAAA,OAAO,EAAE;AADG;AALI,CAAlB,C,CAQA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAIA;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBR,SAAsB;AAAA,MAAXS,MAAW;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;AAEA,MAAIH,MAAM,CAACG,IAAP,KAAgBf,OAAO,CAACN,YAAR,CAAqBqB,IAAzC,EAA+C;AAC7CF,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACI,OAAnB;AAGA,2CACKL,KADL;AAEEJ,MAAAA,WAAW,EAAEK,MAAM,CAACI;AAFtB;AAID,GATD,CAUF;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AApBE,OAqBK,IAAGJ,MAAM,CAACG,IAAP,KAAcf,OAAO,CAACL,WAAR,CAAoBoB,IAArC,EAA0C;AAC7CF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,6CACKH,KADL;AAEEJ,QAAAA,WAAW,EAACK,MAAM,CAACI;AAFrB;AAMD,KAVI,MAWA,IAAGJ,MAAM,CAACG,IAAP,KAAcf,OAAO,CAACJ,UAAR,CAAmBmB,IAApC,EAAyC;AAC5C,6CACKJ,KADL;AAEEJ,QAAAA,WAAW,EAACP,OAAO,CAACJ,UAAR,CAAmBoB;AAFjC;AAID,KALI,MAMA,IAAGJ,MAAM,CAACG,IAAP,KAAgBf,OAAO,CAACP,UAAR,CAAmBsB,IAAtC,EAA2C;AAC9C,6CACKJ,KADL;AAEEN,QAAAA,QAAQ,EAACO,MAAM,CAACI;AAFlB;AAOD,KARI,MASA,IAAGJ,MAAM,CAACG,IAAP,KAAef,OAAO,CAACR,UAAR,CAAmBuB,IAArC,EAA0C;AAC7CF,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,6CACKH,KADL;AAEEP,QAAAA,QAAQ,EAACQ,MAAM,CAACI;AAFlB;AAOD,KATI,MAUA,IAAGJ,MAAM,CAACG,IAAP,KAAgBd,WAAW,CAACgB,oBAA/B,EAAoD;AACvD,6CACKN,KADL;AAEEO,QAAAA,UAAU,EAAC;AAACZ,UAAAA,MAAM,EAACM,MAAM,CAACN;AAAf;AAFb;AAKD;;AAED,SAAOK,KAAP;AACD,CArED;;AAuEA,eAAeD,YAAf","sourcesContent":["\nimport {updateUser,updatePass,loginSuccess,loginFailed,loginBegan,logoutBegan,logoutSccess,logoutFailed}from '../../middleware/apiGen';\nimport * as actions from'../../middleware/apiGen'\nimport * as ActionEvent from '../../static/actionsEvent';\nimport {createReducer} from'@reduxjs/toolkit'\nconst initState = {\n \n  username:\"\",\n  password:\"\",\n  toPath:\"home-fashion\",\n  loginStatus:{ loginName: \"not login\",\n  isLogin: 0,}\n};\n//  const loginReducer = createReducer(initState,{\n\n//   updateUser:(state,action)=>{\n//     console.log(\"updatinguser\")\n//     state.push({username:action.payload})\n\n//   },\n//   loginBegan:(state,action)=>{\n    \n//     state.push({\n//       loginStatus:{\n// message:\"loginBegan\",\n// isLogin:0,\n// loginName:\"login\"\n\n//       }\n\n//     })\n\n//   }\n  \n\n\n// })\n\n\nconst loginReducer = (state = initState, action) => {\n  console.log(action.type)\n \n  if (action.type === actions.loginSuccess.type) {\n    console.log(state);\n    console.log(action.payload);\n\n      \n    return {\n      ...state,\n      loginStatus: action.payload\n    };\n  }\n//   else if(action.type= actions.signout.type){\n//     console.log(\"logout brgan\");\n//     console.log(action);\n// return{\n//   ...state,\n//   loginStatus:action.payload\n\n\n// }\n\n//   }\n  else if(action.type===actions.loginFailed.type){\n    console.log(\"login failed\");\n    console.log(\"action.payload\");\n    \n    return{\n      ...state,\n      loginStatus:action.payload\n\n    }\n\n  }\n  else if(action.type===actions.loginBegan.type){\n    return {\n      ...state,\n      loginStatus:actions.loginBegan.payload\n    }\n  }\n  else if(action.type === actions.updatePass.type){\n    return{\n      ...state,\n      password:action.payload\n\n    }\n\n\n  }\n  else if(action.type ===actions.updateUser.type){\n    console.log(\"updateUser\");\n    return{\n      ...state,\n      username:action.payload\n\n    }\n\n\n  }\n  else if(action.type === ActionEvent.Login_Redirect_Event){\n    return{\n      ...state,\n      redirectTo:{toPath:action.toPath}\n\n    }\n  }\n\n  return state;\n};\n\nexport default loginReducer;\n"]},"metadata":{},"sourceType":"module"}